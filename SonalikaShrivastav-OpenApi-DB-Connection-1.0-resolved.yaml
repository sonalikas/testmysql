---
openapi: 3.0.0
info:
  title: OpenApi for Database connection
  description: The API for connecting MySql Database
  contact:
    name: sonalika shrivastav
    email: sonalika@cygniusconsulting.com
  version: "1.0"
servers:
- url: https://api.mysqltest.com
  description: New Server 1
- url: https://{hostname}:{port}/connect
  description: port number
  variables:
    hostname:
      default: localhost
    port:
      default: "3306"
tags:
- name: mysql
  description: create an test a connection with mysql
- name: save mysqlDB
  description: save mySql database
- name: run query
  description: run a query on database
- name: save statement
  description: save the output of query
paths:
  /TestConnection/mysql:
    description: Connection with mysql database
    post:
      description: try to connecting with mysql
      operationId: mysqlConnect
      parameters:
      - name: port
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: number
          example: 3306
      - name: server name
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: localhost
      - name: username
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: sonalika
      - name: password
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: pass@123
      - name: database
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: database name
      requestBody:
        description: connected successfully
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mysqConnectionParams'
      responses:
        "2XX":
          description: All OK! (successfull)
        "4XX":
          description: client errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessageResponse'
        "5XX":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessageResponse'
  /saveConnection/mysql:
    description: Connection with mysql database
    post:
      description: try to connecting with mysql
      operationId: mysqlSave
      parameters:
      - name: port
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: number
          example: 3306
      - name: server name
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: localhost
      - name: username
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: sonalika
      - name: password
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: pass@123
      - name: database
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: database name
      requestBody:
        description: connected successfully
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mysqConnectionParams'
      responses:
        "2XX":
          description: save (successfull)
          content:
            text/plain:
              schema:
                type: string
                example: your database is saved successfully....
        "4XX":
          description: client errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessageResponse'
        "5XX":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessageResponse'
  /mysql/executeQuery:
    description: run query with mysql database
    post:
      parameters:
      - name: database
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: employee
      - name: query
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: select * from tab;
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryParams'
      responses:
        "2XX":
          description: all ok! ( Run successfully)
        "4XX":
          description: client errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessageResponse'
        "5XX":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessageResponse'
  /mysql/getResponse:
    description: get result from query
    post:
      operationId: getResponce
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getResponseParams'
      responses:
        "2XX":
          description: status of response
          content:
            text/cvs:
              schema:
                type: string
                example: 200,sonalika,B1,10
        "4XX":
          description: client errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessageResponse'
        "5XX":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessageResponse'
components:
  schemas:
    mysqConnectionParams:
      type: object
      properties:
        databaseId:
          type: number
          description: unique key
        serverHostname:
          type: string
          description: server name
          example: localhost
        port:
          type: number
          description: port number
          default: 3306
        username:
          type: string
          description: user name
          example: admin
        password:
          type: string
          description: password
          example: root
        database:
          type: string
          description: database name
          example: test
    errorMessageResponse:
      type: object
      properties:
        errorId:
          type: number
          description: unique error code
        error:
          type: string
          description: shows error message
        solution:
          type: string
          description: probable solution
      description: Represents error messages
    QueryParams:
      type: object
      properties:
        database:
          type: string
          description: database name
          example: test
        query:
          type: string
          description: Query statement
          example: slect * from tab;
      description: query parameters
    getResponseParams:
      type: object
      properties:
        databseParams:
          $ref: '#/components/schemas/mysqConnectionParams'
  responses:
    errorMessage:
      description: could not connect
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorMessageResponse'
    "4XXResponse":
      description: client errors
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorMessageResponse'
    "5XXResponse":
      description: Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorMessageResponse'
